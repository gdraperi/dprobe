// Copyright 2016 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build darwin dragonfly freebsd netbsd openbsd

package route

import (
	"reflect"
	"testing"
)

type parseAddrsTest struct ***REMOVED***
	attrs uint
	fn    func(int, []byte) (int, Addr, error)
	b     []byte
	as    []Addr
***REMOVED***

var parseAddrsLittleEndianTests = []parseAddrsTest***REMOVED***
	***REMOVED***
		sysRTA_DST | sysRTA_GATEWAY | sysRTA_NETMASK | sysRTA_BRD,
		parseKernelInetAddr,
		[]byte***REMOVED***
			0x38, 0x12, 0x0, 0x0, 0xff, 0xff, 0xff, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,

			0x38, 0x12, 0x2, 0x0, 0x6, 0x3, 0x6, 0x0,
			0x65, 0x6d, 0x31, 0x0, 0xc, 0x29, 0x66, 0x2c,
			0xdc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,

			0x10, 0x2, 0x0, 0x0, 0xac, 0x10, 0xdc, 0xb4,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,

			0x10, 0x2, 0x0, 0x0, 0xac, 0x10, 0xdc, 0xff,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
		***REMOVED***,
		[]Addr***REMOVED***
			&LinkAddr***REMOVED***Index: 0***REMOVED***,
			&LinkAddr***REMOVED***Index: 2, Name: "em1", Addr: []byte***REMOVED***0x00, 0x0c, 0x29, 0x66, 0x2c, 0xdc***REMOVED******REMOVED***,
			&Inet4Addr***REMOVED***IP: [4]byte***REMOVED***172, 16, 220, 180***REMOVED******REMOVED***,
			nil,
			nil,
			nil,
			nil,
			&Inet4Addr***REMOVED***IP: [4]byte***REMOVED***172, 16, 220, 255***REMOVED******REMOVED***,
		***REMOVED***,
	***REMOVED***,
	***REMOVED***
		sysRTA_NETMASK | sysRTA_IFP | sysRTA_IFA,
		parseKernelInetAddr,
		[]byte***REMOVED***
			0x7, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0x0,

			0x18, 0x12, 0xa, 0x0, 0x87, 0x8, 0x0, 0x0,
			0x76, 0x6c, 0x61, 0x6e, 0x35, 0x36, 0x38, 0x32,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,

			0x10, 0x2, 0x0, 0x0, 0xa9, 0xfe, 0x0, 0x1,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
		***REMOVED***,
		[]Addr***REMOVED***
			nil,
			nil,
			&Inet4Addr***REMOVED***IP: [4]byte***REMOVED***255, 255, 255, 0***REMOVED******REMOVED***,
			nil,
			&LinkAddr***REMOVED***Index: 10, Name: "vlan5682"***REMOVED***,
			&Inet4Addr***REMOVED***IP: [4]byte***REMOVED***169, 254, 0, 1***REMOVED******REMOVED***,
			nil,
			nil,
		***REMOVED***,
	***REMOVED***,
***REMOVED***

func TestParseAddrs(t *testing.T) ***REMOVED***
	tests := parseAddrsLittleEndianTests
	if nativeEndian != littleEndian ***REMOVED***
		t.Skip("no test for non-little endian machine yet")
	***REMOVED***

	for i, tt := range tests ***REMOVED***
		as, err := parseAddrs(tt.attrs, tt.fn, tt.b)
		if err != nil ***REMOVED***
			t.Error(i, err)
			continue
		***REMOVED***
		as = as[:8] // the list varies between operating systems
		if !reflect.DeepEqual(as, tt.as) ***REMOVED***
			t.Errorf("#%d: got %+v; want %+v", i, as, tt.as)
			continue
		***REMOVED***
	***REMOVED***
***REMOVED***
