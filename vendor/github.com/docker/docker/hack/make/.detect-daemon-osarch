#!/usr/bin/env bash
set -e

docker-version-osarch() ***REMOVED***
	if ! type docker &>/dev/null; then
		# docker is not installed
		return
	fi
	local target="$1" # "Client" or "Server"
	local fmtStr="***REMOVED******REMOVED***.$***REMOVED***target***REMOVED***.Os***REMOVED******REMOVED***/***REMOVED******REMOVED***.$***REMOVED***target***REMOVED***.Arch***REMOVED******REMOVED***"
	if docker version -f "$fmtStr" 2>/dev/null; then
		# if "docker version -f" works, let's just use that!
		return
	fi
	docker version | awk '
		$1 ~ /^(Client|Server):$/ ***REMOVED*** section = 0 ***REMOVED***
		$1 == "'"$target"':" ***REMOVED*** section = 1; next ***REMOVED***
		section && $1 == "OS/Arch:" ***REMOVED*** print $2 ***REMOVED***

		# old versions of Docker
		$1 == "OS/Arch" && $2 == "('"$***REMOVED***target,,***REMOVED***"'):" ***REMOVED*** print $3 ***REMOVED***
	'
***REMOVED***

# Retrieve OS/ARCH of docker daemon, e.g. linux/amd64
export DOCKER_ENGINE_OSARCH="$***REMOVED***DOCKER_ENGINE_OSARCH:=$(docker-version-osarch 'Server')***REMOVED***"
export DOCKER_ENGINE_GOOS="$***REMOVED***DOCKER_ENGINE_OSARCH%/****REMOVED***"
export DOCKER_ENGINE_GOARCH="$***REMOVED***DOCKER_ENGINE_OSARCH##*/***REMOVED***"
DOCKER_ENGINE_GOARCH=$***REMOVED***DOCKER_ENGINE_GOARCH:=amd64***REMOVED***

# and the client, just in case
export DOCKER_CLIENT_OSARCH="$(docker-version-osarch 'Client')"
export DOCKER_CLIENT_GOOS="$***REMOVED***DOCKER_CLIENT_OSARCH%/****REMOVED***"
export DOCKER_CLIENT_GOARCH="$***REMOVED***DOCKER_CLIENT_OSARCH##*/***REMOVED***"
DOCKER_CLIENT_GOARCH=$***REMOVED***DOCKER_CLIENT_GOARCH:=amd64***REMOVED***

# Retrieve the architecture used in contrib/builder/(deb|rpm)/$PACKAGE_ARCH/
PACKAGE_ARCH='amd64'
case "$***REMOVED***DOCKER_ENGINE_GOARCH:-$DOCKER_CLIENT_GOARCH***REMOVED***" in
	arm)
		PACKAGE_ARCH='armhf'
		;;
	arm64)
		PACKAGE_ARCH='aarch64'
		;;
	amd64|ppc64le|s390x)
		PACKAGE_ARCH="$***REMOVED***DOCKER_ENGINE_GOARCH:-$DOCKER_CLIENT_GOARCH***REMOVED***"
		;;
	*)
		echo >&2 "warning: not sure how to convert '$DOCKER_ENGINE_GOARCH' to a 'Docker' arch, assuming '$PACKAGE_ARCH'"
		;;
esac
export PACKAGE_ARCH

DOCKERFILE='Dockerfile'
case "$PACKAGE_ARCH" in
	amd64)
		case "$***REMOVED***DOCKER_ENGINE_GOOS:-$DOCKER_CLIENT_GOOS***REMOVED***" in
			windows)
				DOCKERFILE='Dockerfile.windows'
				;;
		esac
		;;
	*)
		DOCKERFILE="Dockerfile.$PACKAGE_ARCH"
		;;
esac
export DOCKERFILE
