// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: networkdb.proto

/*
	Package networkdb is a generated protocol buffer package.

	It is generated from these files:
		networkdb.proto

	It has these top-level messages:
		GossipMessage
		NodeEvent
		NetworkEvent
		NetworkEntry
		NetworkPushPull
		TableEvent
		BulkSyncMessage
		CompoundMessage
*/
package networkdb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

import github_com_hashicorp_serf_serf "github.com/hashicorp/serf/serf"

import strings "strings"
import reflect "reflect"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// MessageType enum defines all the core message types that networkdb
// uses to communicate to peers.
type MessageType int32

const (
	MessageTypeInvalid MessageType = 0
	// NetworEvent message type is used to communicate network
	// attachments on the node.
	MessageTypeNetworkEvent MessageType = 1
	// TableEvent message type is used to communicate any table
	// CRUD event that happened on the node.
	MessageTypeTableEvent MessageType = 2
	// PushPull message type is used to syncup all network
	// attachments on a peer node either during startup of this
	// node or with a random peer node periodically thereafter.
	MessageTypePushPull MessageType = 3
	// BulkSync message is used to bulksync the whole networkdb
	// state with a peer node during startup of this node or with
	// a random peer node periodically thereafter.
	MessageTypeBulkSync MessageType = 4
	// Compound message type is used to form a compound message
	// which is a pack of many message of above types, packed into
	// a single compound message.
	MessageTypeCompound MessageType = 5
	// NodeEvent message type is used to communicare node
	// join/leave events in the cluster
	MessageTypeNodeEvent MessageType = 6
)

var MessageType_name = map[int32]string***REMOVED***
	0: "INVALID",
	1: "NETWORK_EVENT",
	2: "TABLE_EVENT",
	3: "PUSH_PULL",
	4: "BULK_SYNC",
	5: "COMPOUND",
	6: "NODE_EVENT",
***REMOVED***
var MessageType_value = map[string]int32***REMOVED***
	"INVALID":       0,
	"NETWORK_EVENT": 1,
	"TABLE_EVENT":   2,
	"PUSH_PULL":     3,
	"BULK_SYNC":     4,
	"COMPOUND":      5,
	"NODE_EVENT":    6,
***REMOVED***

func (x MessageType) String() string ***REMOVED***
	return proto.EnumName(MessageType_name, int32(x))
***REMOVED***
func (MessageType) EnumDescriptor() ([]byte, []int) ***REMOVED*** return fileDescriptorNetworkdb, []int***REMOVED***0***REMOVED*** ***REMOVED***

type NodeEvent_Type int32

const (
	NodeEventTypeInvalid NodeEvent_Type = 0
	// Join event is generated when this node joins the cluster.
	NodeEventTypeJoin NodeEvent_Type = 1
	// Leave event is generated when this node leaves the cluster.
	NodeEventTypeLeave NodeEvent_Type = 2
)

var NodeEvent_Type_name = map[int32]string***REMOVED***
	0: "INVALID",
	1: "JOIN",
	2: "LEAVE",
***REMOVED***
var NodeEvent_Type_value = map[string]int32***REMOVED***
	"INVALID": 0,
	"JOIN":    1,
	"LEAVE":   2,
***REMOVED***

func (x NodeEvent_Type) String() string ***REMOVED***
	return proto.EnumName(NodeEvent_Type_name, int32(x))
***REMOVED***
func (NodeEvent_Type) EnumDescriptor() ([]byte, []int) ***REMOVED*** return fileDescriptorNetworkdb, []int***REMOVED***1, 0***REMOVED*** ***REMOVED***

type NetworkEvent_Type int32

const (
	NetworkEventTypeInvalid NetworkEvent_Type = 0
	// Join event is generated when this node joins a network.
	NetworkEventTypeJoin NetworkEvent_Type = 1
	// Leave event is generated when this node leaves a network.
	NetworkEventTypeLeave NetworkEvent_Type = 2
)

var NetworkEvent_Type_name = map[int32]string***REMOVED***
	0: "INVALID",
	1: "JOIN",
	2: "LEAVE",
***REMOVED***
var NetworkEvent_Type_value = map[string]int32***REMOVED***
	"INVALID": 0,
	"JOIN":    1,
	"LEAVE":   2,
***REMOVED***

func (x NetworkEvent_Type) String() string ***REMOVED***
	return proto.EnumName(NetworkEvent_Type_name, int32(x))
***REMOVED***
func (NetworkEvent_Type) EnumDescriptor() ([]byte, []int) ***REMOVED*** return fileDescriptorNetworkdb, []int***REMOVED***2, 0***REMOVED*** ***REMOVED***

type TableEvent_Type int32

const (
	TableEventTypeInvalid TableEvent_Type = 0
	// Create signifies that this table entry was just
	// created.
	TableEventTypeCreate TableEvent_Type = 1
	// Update signifies that this table entry was just
	// updated.
	TableEventTypeUpdate TableEvent_Type = 2
	// Delete signifies that this table entry was just
	// updated.
	TableEventTypeDelete TableEvent_Type = 3
)

var TableEvent_Type_name = map[int32]string***REMOVED***
	0: "INVALID",
	1: "CREATE",
	2: "UPDATE",
	3: "DELETE",
***REMOVED***
var TableEvent_Type_value = map[string]int32***REMOVED***
	"INVALID": 0,
	"CREATE":  1,
	"UPDATE":  2,
	"DELETE":  3,
***REMOVED***

func (x TableEvent_Type) String() string ***REMOVED***
	return proto.EnumName(TableEvent_Type_name, int32(x))
***REMOVED***
func (TableEvent_Type) EnumDescriptor() ([]byte, []int) ***REMOVED*** return fileDescriptorNetworkdb, []int***REMOVED***5, 0***REMOVED*** ***REMOVED***

// GossipMessage is a basic message header used by all messages types.
type GossipMessage struct ***REMOVED***
	Type MessageType `protobuf:"varint,1,opt,name=type,proto3,enum=networkdb.MessageType" json:"type,omitempty"`
	Data []byte      `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
***REMOVED***

func (m *GossipMessage) Reset()                    ***REMOVED*** *m = GossipMessage***REMOVED******REMOVED*** ***REMOVED***
func (*GossipMessage) ProtoMessage()               ***REMOVED******REMOVED***
func (*GossipMessage) Descriptor() ([]byte, []int) ***REMOVED*** return fileDescriptorNetworkdb, []int***REMOVED***0***REMOVED*** ***REMOVED***

func (m *GossipMessage) GetType() MessageType ***REMOVED***
	if m != nil ***REMOVED***
		return m.Type
	***REMOVED***
	return MessageTypeInvalid
***REMOVED***

func (m *GossipMessage) GetData() []byte ***REMOVED***
	if m != nil ***REMOVED***
		return m.Data
	***REMOVED***
	return nil
***REMOVED***

// NodeEvent message payload definition.
type NodeEvent struct ***REMOVED***
	Type NodeEvent_Type `protobuf:"varint,1,opt,name=type,proto3,enum=networkdb.NodeEvent_Type" json:"type,omitempty"`
	// Lamport time using a network lamport clock indicating the
	// time this event was generated on the node where it was
	// generated.
	LTime github_com_hashicorp_serf_serf.LamportTime `protobuf:"varint,2,opt,name=l_time,json=lTime,proto3,customtype=github.com/hashicorp/serf/serf.LamportTime" json:"l_time"`
	// Source node name.
	NodeName string `protobuf:"bytes,3,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
***REMOVED***

func (m *NodeEvent) Reset()                    ***REMOVED*** *m = NodeEvent***REMOVED******REMOVED*** ***REMOVED***
func (*NodeEvent) ProtoMessage()               ***REMOVED******REMOVED***
func (*NodeEvent) Descriptor() ([]byte, []int) ***REMOVED*** return fileDescriptorNetworkdb, []int***REMOVED***1***REMOVED*** ***REMOVED***

func (m *NodeEvent) GetType() NodeEvent_Type ***REMOVED***
	if m != nil ***REMOVED***
		return m.Type
	***REMOVED***
	return NodeEventTypeInvalid
***REMOVED***

func (m *NodeEvent) GetNodeName() string ***REMOVED***
	if m != nil ***REMOVED***
		return m.NodeName
	***REMOVED***
	return ""
***REMOVED***

// NetworkEvent message payload definition.
type NetworkEvent struct ***REMOVED***
	Type NetworkEvent_Type `protobuf:"varint,1,opt,name=type,proto3,enum=networkdb.NetworkEvent_Type" json:"type,omitempty"`
	// Lamport time using a network lamport clock indicating the
	// time this event was generated on the node where it was
	// generated.
	LTime github_com_hashicorp_serf_serf.LamportTime `protobuf:"varint,2,opt,name=l_time,json=lTime,proto3,customtype=github.com/hashicorp/serf/serf.LamportTime" json:"l_time"`
	// Source node name.
	NodeName string `protobuf:"bytes,3,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// ID of the network for which the event is generated.
	NetworkID string `protobuf:"bytes,4,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
***REMOVED***

func (m *NetworkEvent) Reset()                    ***REMOVED*** *m = NetworkEvent***REMOVED******REMOVED*** ***REMOVED***
func (*NetworkEvent) ProtoMessage()               ***REMOVED******REMOVED***
func (*NetworkEvent) Descriptor() ([]byte, []int) ***REMOVED*** return fileDescriptorNetworkdb, []int***REMOVED***2***REMOVED*** ***REMOVED***

func (m *NetworkEvent) GetType() NetworkEvent_Type ***REMOVED***
	if m != nil ***REMOVED***
		return m.Type
	***REMOVED***
	return NetworkEventTypeInvalid
***REMOVED***

func (m *NetworkEvent) GetNodeName() string ***REMOVED***
	if m != nil ***REMOVED***
		return m.NodeName
	***REMOVED***
	return ""
***REMOVED***

func (m *NetworkEvent) GetNetworkID() string ***REMOVED***
	if m != nil ***REMOVED***
		return m.NetworkID
	***REMOVED***
	return ""
***REMOVED***

// NetworkEntry for push pull of networks.
type NetworkEntry struct ***REMOVED***
	// ID of the network
	NetworkID string `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	// Latest lamport time of the network attachment when this
	// network event was recorded.
	LTime github_com_hashicorp_serf_serf.LamportTime `protobuf:"varint,2,opt,name=l_time,json=lTime,proto3,customtype=github.com/hashicorp/serf/serf.LamportTime" json:"l_time"`
	// Source node name where this network attachment happened.
	NodeName string `protobuf:"bytes,3,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// Indicates if a leave from this network is in progress.
	Leaving bool `protobuf:"varint,4,opt,name=leaving,proto3" json:"leaving,omitempty"`
***REMOVED***

func (m *NetworkEntry) Reset()                    ***REMOVED*** *m = NetworkEntry***REMOVED******REMOVED*** ***REMOVED***
func (*NetworkEntry) ProtoMessage()               ***REMOVED******REMOVED***
func (*NetworkEntry) Descriptor() ([]byte, []int) ***REMOVED*** return fileDescriptorNetworkdb, []int***REMOVED***3***REMOVED*** ***REMOVED***

func (m *NetworkEntry) GetNetworkID() string ***REMOVED***
	if m != nil ***REMOVED***
		return m.NetworkID
	***REMOVED***
	return ""
***REMOVED***

func (m *NetworkEntry) GetNodeName() string ***REMOVED***
	if m != nil ***REMOVED***
		return m.NodeName
	***REMOVED***
	return ""
***REMOVED***

func (m *NetworkEntry) GetLeaving() bool ***REMOVED***
	if m != nil ***REMOVED***
		return m.Leaving
	***REMOVED***
	return false
***REMOVED***

// NetworkPushpull message payload definition.
type NetworkPushPull struct ***REMOVED***
	// Lamport time when this push pull was initiated.
	LTime    github_com_hashicorp_serf_serf.LamportTime `protobuf:"varint,1,opt,name=l_time,json=lTime,proto3,customtype=github.com/hashicorp/serf/serf.LamportTime" json:"l_time"`
	Networks []*NetworkEntry                            `protobuf:"bytes,2,rep,name=networks" json:"networks,omitempty"`
	// Name of the node sending this push pull payload.
	NodeName string `protobuf:"bytes,3,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
***REMOVED***

func (m *NetworkPushPull) Reset()                    ***REMOVED*** *m = NetworkPushPull***REMOVED******REMOVED*** ***REMOVED***
func (*NetworkPushPull) ProtoMessage()               ***REMOVED******REMOVED***
func (*NetworkPushPull) Descriptor() ([]byte, []int) ***REMOVED*** return fileDescriptorNetworkdb, []int***REMOVED***4***REMOVED*** ***REMOVED***

func (m *NetworkPushPull) GetNetworks() []*NetworkEntry ***REMOVED***
	if m != nil ***REMOVED***
		return m.Networks
	***REMOVED***
	return nil
***REMOVED***

func (m *NetworkPushPull) GetNodeName() string ***REMOVED***
	if m != nil ***REMOVED***
		return m.NodeName
	***REMOVED***
	return ""
***REMOVED***

// TableEvent message payload definition.
type TableEvent struct ***REMOVED***
	Type TableEvent_Type `protobuf:"varint,1,opt,name=type,proto3,enum=networkdb.TableEvent_Type" json:"type,omitempty"`
	// Lamport time when this event was generated.
	LTime github_com_hashicorp_serf_serf.LamportTime `protobuf:"varint,2,opt,name=l_time,json=lTime,proto3,customtype=github.com/hashicorp/serf/serf.LamportTime" json:"l_time"`
	// Node name where this event originated.
	NodeName string `protobuf:"bytes,3,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// ID of the network to which this table entry belongs.
	NetworkID string `protobuf:"bytes,4,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	// Name of the table to which this table entry belongs.
	TableName string `protobuf:"bytes,5,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// Entry key.
	Key string `protobuf:"bytes,6,opt,name=key,proto3" json:"key,omitempty"`
	// Entry value.
	Value []byte `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
	// Residual reap time for the entry before getting deleted in seconds
	ResidualReapTime int32 `protobuf:"varint,8,opt,name=residual_reap_time,json=residualReapTime,proto3" json:"residual_reap_time,omitempty"`
***REMOVED***

func (m *TableEvent) Reset()                    ***REMOVED*** *m = TableEvent***REMOVED******REMOVED*** ***REMOVED***
func (*TableEvent) ProtoMessage()               ***REMOVED******REMOVED***
func (*TableEvent) Descriptor() ([]byte, []int) ***REMOVED*** return fileDescriptorNetworkdb, []int***REMOVED***5***REMOVED*** ***REMOVED***

func (m *TableEvent) GetType() TableEvent_Type ***REMOVED***
	if m != nil ***REMOVED***
		return m.Type
	***REMOVED***
	return TableEventTypeInvalid
***REMOVED***

func (m *TableEvent) GetNodeName() string ***REMOVED***
	if m != nil ***REMOVED***
		return m.NodeName
	***REMOVED***
	return ""
***REMOVED***

func (m *TableEvent) GetNetworkID() string ***REMOVED***
	if m != nil ***REMOVED***
		return m.NetworkID
	***REMOVED***
	return ""
***REMOVED***

func (m *TableEvent) GetTableName() string ***REMOVED***
	if m != nil ***REMOVED***
		return m.TableName
	***REMOVED***
	return ""
***REMOVED***

func (m *TableEvent) GetKey() string ***REMOVED***
	if m != nil ***REMOVED***
		return m.Key
	***REMOVED***
	return ""
***REMOVED***

func (m *TableEvent) GetValue() []byte ***REMOVED***
	if m != nil ***REMOVED***
		return m.Value
	***REMOVED***
	return nil
***REMOVED***

func (m *TableEvent) GetResidualReapTime() int32 ***REMOVED***
	if m != nil ***REMOVED***
		return m.ResidualReapTime
	***REMOVED***
	return 0
***REMOVED***

// BulkSync message payload definition.
type BulkSyncMessage struct ***REMOVED***
	// Lamport time when this bulk sync was initiated.
	LTime github_com_hashicorp_serf_serf.LamportTime `protobuf:"varint,1,opt,name=l_time,json=lTime,proto3,customtype=github.com/hashicorp/serf/serf.LamportTime" json:"l_time"`
	// Indicates if this bulksync is a response to a bulk sync
	// request from a peer node.
	Unsolicited bool `protobuf:"varint,2,opt,name=unsolicited,proto3" json:"unsolicited,omitempty"`
	// Name of the node which is producing this bulk sync message.
	NodeName string `protobuf:"bytes,3,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// List of network names whose table entries are getting
	// bulksynced as part of the bulksync.
	Networks []string `protobuf:"bytes,4,rep,name=networks" json:"networks,omitempty"`
	// Bulksync payload
	Payload []byte `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
***REMOVED***

func (m *BulkSyncMessage) Reset()                    ***REMOVED*** *m = BulkSyncMessage***REMOVED******REMOVED*** ***REMOVED***
func (*BulkSyncMessage) ProtoMessage()               ***REMOVED******REMOVED***
func (*BulkSyncMessage) Descriptor() ([]byte, []int) ***REMOVED*** return fileDescriptorNetworkdb, []int***REMOVED***6***REMOVED*** ***REMOVED***

func (m *BulkSyncMessage) GetUnsolicited() bool ***REMOVED***
	if m != nil ***REMOVED***
		return m.Unsolicited
	***REMOVED***
	return false
***REMOVED***

func (m *BulkSyncMessage) GetNodeName() string ***REMOVED***
	if m != nil ***REMOVED***
		return m.NodeName
	***REMOVED***
	return ""
***REMOVED***

func (m *BulkSyncMessage) GetNetworks() []string ***REMOVED***
	if m != nil ***REMOVED***
		return m.Networks
	***REMOVED***
	return nil
***REMOVED***

func (m *BulkSyncMessage) GetPayload() []byte ***REMOVED***
	if m != nil ***REMOVED***
		return m.Payload
	***REMOVED***
	return nil
***REMOVED***

// Compound message payload definition.
type CompoundMessage struct ***REMOVED***
	// A list of simple messages.
	Messages []*CompoundMessage_SimpleMessage `protobuf:"bytes,1,rep,name=messages" json:"messages,omitempty"`
***REMOVED***

func (m *CompoundMessage) Reset()                    ***REMOVED*** *m = CompoundMessage***REMOVED******REMOVED*** ***REMOVED***
func (*CompoundMessage) ProtoMessage()               ***REMOVED******REMOVED***
func (*CompoundMessage) Descriptor() ([]byte, []int) ***REMOVED*** return fileDescriptorNetworkdb, []int***REMOVED***7***REMOVED*** ***REMOVED***

func (m *CompoundMessage) GetMessages() []*CompoundMessage_SimpleMessage ***REMOVED***
	if m != nil ***REMOVED***
		return m.Messages
	***REMOVED***
	return nil
***REMOVED***

type CompoundMessage_SimpleMessage struct ***REMOVED***
	// Bytestring payload of a message constructed using
	// other message type definitions.
	Payload []byte `protobuf:"bytes,1,opt,name=Payload,proto3" json:"Payload,omitempty"`
***REMOVED***

func (m *CompoundMessage_SimpleMessage) Reset()      ***REMOVED*** *m = CompoundMessage_SimpleMessage***REMOVED******REMOVED*** ***REMOVED***
func (*CompoundMessage_SimpleMessage) ProtoMessage() ***REMOVED******REMOVED***
func (*CompoundMessage_SimpleMessage) Descriptor() ([]byte, []int) ***REMOVED***
	return fileDescriptorNetworkdb, []int***REMOVED***7, 0***REMOVED***
***REMOVED***

func (m *CompoundMessage_SimpleMessage) GetPayload() []byte ***REMOVED***
	if m != nil ***REMOVED***
		return m.Payload
	***REMOVED***
	return nil
***REMOVED***

func init() ***REMOVED***
	proto.RegisterType((*GossipMessage)(nil), "networkdb.GossipMessage")
	proto.RegisterType((*NodeEvent)(nil), "networkdb.NodeEvent")
	proto.RegisterType((*NetworkEvent)(nil), "networkdb.NetworkEvent")
	proto.RegisterType((*NetworkEntry)(nil), "networkdb.NetworkEntry")
	proto.RegisterType((*NetworkPushPull)(nil), "networkdb.NetworkPushPull")
	proto.RegisterType((*TableEvent)(nil), "networkdb.TableEvent")
	proto.RegisterType((*BulkSyncMessage)(nil), "networkdb.BulkSyncMessage")
	proto.RegisterType((*CompoundMessage)(nil), "networkdb.CompoundMessage")
	proto.RegisterType((*CompoundMessage_SimpleMessage)(nil), "networkdb.CompoundMessage.SimpleMessage")
	proto.RegisterEnum("networkdb.MessageType", MessageType_name, MessageType_value)
	proto.RegisterEnum("networkdb.NodeEvent_Type", NodeEvent_Type_name, NodeEvent_Type_value)
	proto.RegisterEnum("networkdb.NetworkEvent_Type", NetworkEvent_Type_name, NetworkEvent_Type_value)
	proto.RegisterEnum("networkdb.TableEvent_Type", TableEvent_Type_name, TableEvent_Type_value)
***REMOVED***
func (this *GossipMessage) GoString() string ***REMOVED***
	if this == nil ***REMOVED***
		return "nil"
	***REMOVED***
	s := make([]string, 0, 6)
	s = append(s, "&networkdb.GossipMessage***REMOVED***")
	s = append(s, "Type: "+fmt.Sprintf("%#v", this.Type)+",\n")
	s = append(s, "Data: "+fmt.Sprintf("%#v", this.Data)+",\n")
	s = append(s, "***REMOVED***")
	return strings.Join(s, "")
***REMOVED***
func (this *NodeEvent) GoString() string ***REMOVED***
	if this == nil ***REMOVED***
		return "nil"
	***REMOVED***
	s := make([]string, 0, 7)
	s = append(s, "&networkdb.NodeEvent***REMOVED***")
	s = append(s, "Type: "+fmt.Sprintf("%#v", this.Type)+",\n")
	s = append(s, "LTime: "+fmt.Sprintf("%#v", this.LTime)+",\n")
	s = append(s, "NodeName: "+fmt.Sprintf("%#v", this.NodeName)+",\n")
	s = append(s, "***REMOVED***")
	return strings.Join(s, "")
***REMOVED***
func (this *NetworkEvent) GoString() string ***REMOVED***
	if this == nil ***REMOVED***
		return "nil"
	***REMOVED***
	s := make([]string, 0, 8)
	s = append(s, "&networkdb.NetworkEvent***REMOVED***")
	s = append(s, "Type: "+fmt.Sprintf("%#v", this.Type)+",\n")
	s = append(s, "LTime: "+fmt.Sprintf("%#v", this.LTime)+",\n")
	s = append(s, "NodeName: "+fmt.Sprintf("%#v", this.NodeName)+",\n")
	s = append(s, "NetworkID: "+fmt.Sprintf("%#v", this.NetworkID)+",\n")
	s = append(s, "***REMOVED***")
	return strings.Join(s, "")
***REMOVED***
func (this *NetworkEntry) GoString() string ***REMOVED***
	if this == nil ***REMOVED***
		return "nil"
	***REMOVED***
	s := make([]string, 0, 8)
	s = append(s, "&networkdb.NetworkEntry***REMOVED***")
	s = append(s, "NetworkID: "+fmt.Sprintf("%#v", this.NetworkID)+",\n")
	s = append(s, "LTime: "+fmt.Sprintf("%#v", this.LTime)+",\n")
	s = append(s, "NodeName: "+fmt.Sprintf("%#v", this.NodeName)+",\n")
	s = append(s, "Leaving: "+fmt.Sprintf("%#v", this.Leaving)+",\n")
	s = append(s, "***REMOVED***")
	return strings.Join(s, "")
***REMOVED***
func (this *NetworkPushPull) GoString() string ***REMOVED***
	if this == nil ***REMOVED***
		return "nil"
	***REMOVED***
	s := make([]string, 0, 7)
	s = append(s, "&networkdb.NetworkPushPull***REMOVED***")
	s = append(s, "LTime: "+fmt.Sprintf("%#v", this.LTime)+",\n")
	if this.Networks != nil ***REMOVED***
		s = append(s, "Networks: "+fmt.Sprintf("%#v", this.Networks)+",\n")
	***REMOVED***
	s = append(s, "NodeName: "+fmt.Sprintf("%#v", this.NodeName)+",\n")
	s = append(s, "***REMOVED***")
	return strings.Join(s, "")
***REMOVED***
func (this *TableEvent) GoString() string ***REMOVED***
	if this == nil ***REMOVED***
		return "nil"
	***REMOVED***
	s := make([]string, 0, 12)
	s = append(s, "&networkdb.TableEvent***REMOVED***")
	s = append(s, "Type: "+fmt.Sprintf("%#v", this.Type)+",\n")
	s = append(s, "LTime: "+fmt.Sprintf("%#v", this.LTime)+",\n")
	s = append(s, "NodeName: "+fmt.Sprintf("%#v", this.NodeName)+",\n")
	s = append(s, "NetworkID: "+fmt.Sprintf("%#v", this.NetworkID)+",\n")
	s = append(s, "TableName: "+fmt.Sprintf("%#v", this.TableName)+",\n")
	s = append(s, "Key: "+fmt.Sprintf("%#v", this.Key)+",\n")
	s = append(s, "Value: "+fmt.Sprintf("%#v", this.Value)+",\n")
	s = append(s, "ResidualReapTime: "+fmt.Sprintf("%#v", this.ResidualReapTime)+",\n")
	s = append(s, "***REMOVED***")
	return strings.Join(s, "")
***REMOVED***
func (this *BulkSyncMessage) GoString() string ***REMOVED***
	if this == nil ***REMOVED***
		return "nil"
	***REMOVED***
	s := make([]string, 0, 9)
	s = append(s, "&networkdb.BulkSyncMessage***REMOVED***")
	s = append(s, "LTime: "+fmt.Sprintf("%#v", this.LTime)+",\n")
	s = append(s, "Unsolicited: "+fmt.Sprintf("%#v", this.Unsolicited)+",\n")
	s = append(s, "NodeName: "+fmt.Sprintf("%#v", this.NodeName)+",\n")
	s = append(s, "Networks: "+fmt.Sprintf("%#v", this.Networks)+",\n")
	s = append(s, "Payload: "+fmt.Sprintf("%#v", this.Payload)+",\n")
	s = append(s, "***REMOVED***")
	return strings.Join(s, "")
***REMOVED***
func (this *CompoundMessage) GoString() string ***REMOVED***
	if this == nil ***REMOVED***
		return "nil"
	***REMOVED***
	s := make([]string, 0, 5)
	s = append(s, "&networkdb.CompoundMessage***REMOVED***")
	if this.Messages != nil ***REMOVED***
		s = append(s, "Messages: "+fmt.Sprintf("%#v", this.Messages)+",\n")
	***REMOVED***
	s = append(s, "***REMOVED***")
	return strings.Join(s, "")
***REMOVED***
func (this *CompoundMessage_SimpleMessage) GoString() string ***REMOVED***
	if this == nil ***REMOVED***
		return "nil"
	***REMOVED***
	s := make([]string, 0, 5)
	s = append(s, "&networkdb.CompoundMessage_SimpleMessage***REMOVED***")
	s = append(s, "Payload: "+fmt.Sprintf("%#v", this.Payload)+",\n")
	s = append(s, "***REMOVED***")
	return strings.Join(s, "")
***REMOVED***
func valueToGoStringNetworkdb(v interface***REMOVED******REMOVED***, typ string) string ***REMOVED***
	rv := reflect.ValueOf(v)
	if rv.IsNil() ***REMOVED***
		return "nil"
	***REMOVED***
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v ***REMOVED*** return &v ***REMOVED*** ( %#v )", typ, typ, pv)
***REMOVED***
func (m *GossipMessage) Marshal() (dAtA []byte, err error) ***REMOVED***
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil ***REMOVED***
		return nil, err
	***REMOVED***
	return dAtA[:n], nil
***REMOVED***

func (m *GossipMessage) MarshalTo(dAtA []byte) (int, error) ***REMOVED***
	var i int
	_ = i
	var l int
	_ = l
	if m.Type != 0 ***REMOVED***
		dAtA[i] = 0x8
		i++
		i = encodeVarintNetworkdb(dAtA, i, uint64(m.Type))
	***REMOVED***
	if len(m.Data) > 0 ***REMOVED***
		dAtA[i] = 0x12
		i++
		i = encodeVarintNetworkdb(dAtA, i, uint64(len(m.Data)))
		i += copy(dAtA[i:], m.Data)
	***REMOVED***
	return i, nil
***REMOVED***

func (m *NodeEvent) Marshal() (dAtA []byte, err error) ***REMOVED***
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil ***REMOVED***
		return nil, err
	***REMOVED***
	return dAtA[:n], nil
***REMOVED***

func (m *NodeEvent) MarshalTo(dAtA []byte) (int, error) ***REMOVED***
	var i int
	_ = i
	var l int
	_ = l
	if m.Type != 0 ***REMOVED***
		dAtA[i] = 0x8
		i++
		i = encodeVarintNetworkdb(dAtA, i, uint64(m.Type))
	***REMOVED***
	if m.LTime != 0 ***REMOVED***
		dAtA[i] = 0x10
		i++
		i = encodeVarintNetworkdb(dAtA, i, uint64(m.LTime))
	***REMOVED***
	if len(m.NodeName) > 0 ***REMOVED***
		dAtA[i] = 0x1a
		i++
		i = encodeVarintNetworkdb(dAtA, i, uint64(len(m.NodeName)))
		i += copy(dAtA[i:], m.NodeName)
	***REMOVED***
	return i, nil
***REMOVED***

func (m *NetworkEvent) Marshal() (dAtA []byte, err error) ***REMOVED***
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil ***REMOVED***
		return nil, err
	***REMOVED***
	return dAtA[:n], nil
***REMOVED***

func (m *NetworkEvent) MarshalTo(dAtA []byte) (int, error) ***REMOVED***
	var i int
	_ = i
	var l int
	_ = l
	if m.Type != 0 ***REMOVED***
		dAtA[i] = 0x8
		i++
		i = encodeVarintNetworkdb(dAtA, i, uint64(m.Type))
	***REMOVED***
	if m.LTime != 0 ***REMOVED***
		dAtA[i] = 0x10
		i++
		i = encodeVarintNetworkdb(dAtA, i, uint64(m.LTime))
	***REMOVED***
	if len(m.NodeName) > 0 ***REMOVED***
		dAtA[i] = 0x1a
		i++
		i = encodeVarintNetworkdb(dAtA, i, uint64(len(m.NodeName)))
		i += copy(dAtA[i:], m.NodeName)
	***REMOVED***
	if len(m.NetworkID) > 0 ***REMOVED***
		dAtA[i] = 0x22
		i++
		i = encodeVarintNetworkdb(dAtA, i, uint64(len(m.NetworkID)))
		i += copy(dAtA[i:], m.NetworkID)
	***REMOVED***
	return i, nil
***REMOVED***

func (m *NetworkEntry) Marshal() (dAtA []byte, err error) ***REMOVED***
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil ***REMOVED***
		return nil, err
	***REMOVED***
	return dAtA[:n], nil
***REMOVED***

func (m *NetworkEntry) MarshalTo(dAtA []byte) (int, error) ***REMOVED***
	var i int
	_ = i
	var l int
	_ = l
	if len(m.NetworkID) > 0 ***REMOVED***
		dAtA[i] = 0xa
		i++
		i = encodeVarintNetworkdb(dAtA, i, uint64(len(m.NetworkID)))
		i += copy(dAtA[i:], m.NetworkID)
	***REMOVED***
	if m.LTime != 0 ***REMOVED***
		dAtA[i] = 0x10
		i++
		i = encodeVarintNetworkdb(dAtA, i, uint64(m.LTime))
	***REMOVED***
	if len(m.NodeName) > 0 ***REMOVED***
		dAtA[i] = 0x1a
		i++
		i = encodeVarintNetworkdb(dAtA, i, uint64(len(m.NodeName)))
		i += copy(dAtA[i:], m.NodeName)
	***REMOVED***
	if m.Leaving ***REMOVED***
		dAtA[i] = 0x20
		i++
		if m.Leaving ***REMOVED***
			dAtA[i] = 1
		***REMOVED*** else ***REMOVED***
			dAtA[i] = 0
		***REMOVED***
		i++
	***REMOVED***
	return i, nil
***REMOVED***

func (m *NetworkPushPull) Marshal() (dAtA []byte, err error) ***REMOVED***
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil ***REMOVED***
		return nil, err
	***REMOVED***
	return dAtA[:n], nil
***REMOVED***

func (m *NetworkPushPull) MarshalTo(dAtA []byte) (int, error) ***REMOVED***
	var i int
	_ = i
	var l int
	_ = l
	if m.LTime != 0 ***REMOVED***
		dAtA[i] = 0x8
		i++
		i = encodeVarintNetworkdb(dAtA, i, uint64(m.LTime))
	***REMOVED***
	if len(m.Networks) > 0 ***REMOVED***
		for _, msg := range m.Networks ***REMOVED***
			dAtA[i] = 0x12
			i++
			i = encodeVarintNetworkdb(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil ***REMOVED***
				return 0, err
			***REMOVED***
			i += n
		***REMOVED***
	***REMOVED***
	if len(m.NodeName) > 0 ***REMOVED***
		dAtA[i] = 0x1a
		i++
		i = encodeVarintNetworkdb(dAtA, i, uint64(len(m.NodeName)))
		i += copy(dAtA[i:], m.NodeName)
	***REMOVED***
	return i, nil
***REMOVED***

func (m *TableEvent) Marshal() (dAtA []byte, err error) ***REMOVED***
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil ***REMOVED***
		return nil, err
	***REMOVED***
	return dAtA[:n], nil
***REMOVED***

func (m *TableEvent) MarshalTo(dAtA []byte) (int, error) ***REMOVED***
	var i int
	_ = i
	var l int
	_ = l
	if m.Type != 0 ***REMOVED***
		dAtA[i] = 0x8
		i++
		i = encodeVarintNetworkdb(dAtA, i, uint64(m.Type))
	***REMOVED***
	if m.LTime != 0 ***REMOVED***
		dAtA[i] = 0x10
		i++
		i = encodeVarintNetworkdb(dAtA, i, uint64(m.LTime))
	***REMOVED***
	if len(m.NodeName) > 0 ***REMOVED***
		dAtA[i] = 0x1a
		i++
		i = encodeVarintNetworkdb(dAtA, i, uint64(len(m.NodeName)))
		i += copy(dAtA[i:], m.NodeName)
	***REMOVED***
	if len(m.NetworkID) > 0 ***REMOVED***
		dAtA[i] = 0x22
		i++
		i = encodeVarintNetworkdb(dAtA, i, uint64(len(m.NetworkID)))
		i += copy(dAtA[i:], m.NetworkID)
	***REMOVED***
	if len(m.TableName) > 0 ***REMOVED***
		dAtA[i] = 0x2a
		i++
		i = encodeVarintNetworkdb(dAtA, i, uint64(len(m.TableName)))
		i += copy(dAtA[i:], m.TableName)
	***REMOVED***
	if len(m.Key) > 0 ***REMOVED***
		dAtA[i] = 0x32
		i++
		i = encodeVarintNetworkdb(dAtA, i, uint64(len(m.Key)))
		i += copy(dAtA[i:], m.Key)
	***REMOVED***
	if len(m.Value) > 0 ***REMOVED***
		dAtA[i] = 0x3a
		i++
		i = encodeVarintNetworkdb(dAtA, i, uint64(len(m.Value)))
		i += copy(dAtA[i:], m.Value)
	***REMOVED***
	if m.ResidualReapTime != 0 ***REMOVED***
		dAtA[i] = 0x40
		i++
		i = encodeVarintNetworkdb(dAtA, i, uint64(m.ResidualReapTime))
	***REMOVED***
	return i, nil
***REMOVED***

func (m *BulkSyncMessage) Marshal() (dAtA []byte, err error) ***REMOVED***
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil ***REMOVED***
		return nil, err
	***REMOVED***
	return dAtA[:n], nil
***REMOVED***

func (m *BulkSyncMessage) MarshalTo(dAtA []byte) (int, error) ***REMOVED***
	var i int
	_ = i
	var l int
	_ = l
	if m.LTime != 0 ***REMOVED***
		dAtA[i] = 0x8
		i++
		i = encodeVarintNetworkdb(dAtA, i, uint64(m.LTime))
	***REMOVED***
	if m.Unsolicited ***REMOVED***
		dAtA[i] = 0x10
		i++
		if m.Unsolicited ***REMOVED***
			dAtA[i] = 1
		***REMOVED*** else ***REMOVED***
			dAtA[i] = 0
		***REMOVED***
		i++
	***REMOVED***
	if len(m.NodeName) > 0 ***REMOVED***
		dAtA[i] = 0x1a
		i++
		i = encodeVarintNetworkdb(dAtA, i, uint64(len(m.NodeName)))
		i += copy(dAtA[i:], m.NodeName)
	***REMOVED***
	if len(m.Networks) > 0 ***REMOVED***
		for _, s := range m.Networks ***REMOVED***
			dAtA[i] = 0x22
			i++
			l = len(s)
			for l >= 1<<7 ***REMOVED***
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			***REMOVED***
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		***REMOVED***
	***REMOVED***
	if len(m.Payload) > 0 ***REMOVED***
		dAtA[i] = 0x2a
		i++
		i = encodeVarintNetworkdb(dAtA, i, uint64(len(m.Payload)))
		i += copy(dAtA[i:], m.Payload)
	***REMOVED***
	return i, nil
***REMOVED***

func (m *CompoundMessage) Marshal() (dAtA []byte, err error) ***REMOVED***
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil ***REMOVED***
		return nil, err
	***REMOVED***
	return dAtA[:n], nil
***REMOVED***

func (m *CompoundMessage) MarshalTo(dAtA []byte) (int, error) ***REMOVED***
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Messages) > 0 ***REMOVED***
		for _, msg := range m.Messages ***REMOVED***
			dAtA[i] = 0xa
			i++
			i = encodeVarintNetworkdb(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil ***REMOVED***
				return 0, err
			***REMOVED***
			i += n
		***REMOVED***
	***REMOVED***
	return i, nil
***REMOVED***

func (m *CompoundMessage_SimpleMessage) Marshal() (dAtA []byte, err error) ***REMOVED***
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil ***REMOVED***
		return nil, err
	***REMOVED***
	return dAtA[:n], nil
***REMOVED***

func (m *CompoundMessage_SimpleMessage) MarshalTo(dAtA []byte) (int, error) ***REMOVED***
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Payload) > 0 ***REMOVED***
		dAtA[i] = 0xa
		i++
		i = encodeVarintNetworkdb(dAtA, i, uint64(len(m.Payload)))
		i += copy(dAtA[i:], m.Payload)
	***REMOVED***
	return i, nil
***REMOVED***

func encodeFixed64Networkdb(dAtA []byte, offset int, v uint64) int ***REMOVED***
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	dAtA[offset+4] = uint8(v >> 32)
	dAtA[offset+5] = uint8(v >> 40)
	dAtA[offset+6] = uint8(v >> 48)
	dAtA[offset+7] = uint8(v >> 56)
	return offset + 8
***REMOVED***
func encodeFixed32Networkdb(dAtA []byte, offset int, v uint32) int ***REMOVED***
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	return offset + 4
***REMOVED***
func encodeVarintNetworkdb(dAtA []byte, offset int, v uint64) int ***REMOVED***
	for v >= 1<<7 ***REMOVED***
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	***REMOVED***
	dAtA[offset] = uint8(v)
	return offset + 1
***REMOVED***
func (m *GossipMessage) Size() (n int) ***REMOVED***
	var l int
	_ = l
	if m.Type != 0 ***REMOVED***
		n += 1 + sovNetworkdb(uint64(m.Type))
	***REMOVED***
	l = len(m.Data)
	if l > 0 ***REMOVED***
		n += 1 + l + sovNetworkdb(uint64(l))
	***REMOVED***
	return n
***REMOVED***

func (m *NodeEvent) Size() (n int) ***REMOVED***
	var l int
	_ = l
	if m.Type != 0 ***REMOVED***
		n += 1 + sovNetworkdb(uint64(m.Type))
	***REMOVED***
	if m.LTime != 0 ***REMOVED***
		n += 1 + sovNetworkdb(uint64(m.LTime))
	***REMOVED***
	l = len(m.NodeName)
	if l > 0 ***REMOVED***
		n += 1 + l + sovNetworkdb(uint64(l))
	***REMOVED***
	return n
***REMOVED***

func (m *NetworkEvent) Size() (n int) ***REMOVED***
	var l int
	_ = l
	if m.Type != 0 ***REMOVED***
		n += 1 + sovNetworkdb(uint64(m.Type))
	***REMOVED***
	if m.LTime != 0 ***REMOVED***
		n += 1 + sovNetworkdb(uint64(m.LTime))
	***REMOVED***
	l = len(m.NodeName)
	if l > 0 ***REMOVED***
		n += 1 + l + sovNetworkdb(uint64(l))
	***REMOVED***
	l = len(m.NetworkID)
	if l > 0 ***REMOVED***
		n += 1 + l + sovNetworkdb(uint64(l))
	***REMOVED***
	return n
***REMOVED***

func (m *NetworkEntry) Size() (n int) ***REMOVED***
	var l int
	_ = l
	l = len(m.NetworkID)
	if l > 0 ***REMOVED***
		n += 1 + l + sovNetworkdb(uint64(l))
	***REMOVED***
	if m.LTime != 0 ***REMOVED***
		n += 1 + sovNetworkdb(uint64(m.LTime))
	***REMOVED***
	l = len(m.NodeName)
	if l > 0 ***REMOVED***
		n += 1 + l + sovNetworkdb(uint64(l))
	***REMOVED***
	if m.Leaving ***REMOVED***
		n += 2
	***REMOVED***
	return n
***REMOVED***

func (m *NetworkPushPull) Size() (n int) ***REMOVED***
	var l int
	_ = l
	if m.LTime != 0 ***REMOVED***
		n += 1 + sovNetworkdb(uint64(m.LTime))
	***REMOVED***
	if len(m.Networks) > 0 ***REMOVED***
		for _, e := range m.Networks ***REMOVED***
			l = e.Size()
			n += 1 + l + sovNetworkdb(uint64(l))
		***REMOVED***
	***REMOVED***
	l = len(m.NodeName)
	if l > 0 ***REMOVED***
		n += 1 + l + sovNetworkdb(uint64(l))
	***REMOVED***
	return n
***REMOVED***

func (m *TableEvent) Size() (n int) ***REMOVED***
	var l int
	_ = l
	if m.Type != 0 ***REMOVED***
		n += 1 + sovNetworkdb(uint64(m.Type))
	***REMOVED***
	if m.LTime != 0 ***REMOVED***
		n += 1 + sovNetworkdb(uint64(m.LTime))
	***REMOVED***
	l = len(m.NodeName)
	if l > 0 ***REMOVED***
		n += 1 + l + sovNetworkdb(uint64(l))
	***REMOVED***
	l = len(m.NetworkID)
	if l > 0 ***REMOVED***
		n += 1 + l + sovNetworkdb(uint64(l))
	***REMOVED***
	l = len(m.TableName)
	if l > 0 ***REMOVED***
		n += 1 + l + sovNetworkdb(uint64(l))
	***REMOVED***
	l = len(m.Key)
	if l > 0 ***REMOVED***
		n += 1 + l + sovNetworkdb(uint64(l))
	***REMOVED***
	l = len(m.Value)
	if l > 0 ***REMOVED***
		n += 1 + l + sovNetworkdb(uint64(l))
	***REMOVED***
	if m.ResidualReapTime != 0 ***REMOVED***
		n += 1 + sovNetworkdb(uint64(m.ResidualReapTime))
	***REMOVED***
	return n
***REMOVED***

func (m *BulkSyncMessage) Size() (n int) ***REMOVED***
	var l int
	_ = l
	if m.LTime != 0 ***REMOVED***
		n += 1 + sovNetworkdb(uint64(m.LTime))
	***REMOVED***
	if m.Unsolicited ***REMOVED***
		n += 2
	***REMOVED***
	l = len(m.NodeName)
	if l > 0 ***REMOVED***
		n += 1 + l + sovNetworkdb(uint64(l))
	***REMOVED***
	if len(m.Networks) > 0 ***REMOVED***
		for _, s := range m.Networks ***REMOVED***
			l = len(s)
			n += 1 + l + sovNetworkdb(uint64(l))
		***REMOVED***
	***REMOVED***
	l = len(m.Payload)
	if l > 0 ***REMOVED***
		n += 1 + l + sovNetworkdb(uint64(l))
	***REMOVED***
	return n
***REMOVED***

func (m *CompoundMessage) Size() (n int) ***REMOVED***
	var l int
	_ = l
	if len(m.Messages) > 0 ***REMOVED***
		for _, e := range m.Messages ***REMOVED***
			l = e.Size()
			n += 1 + l + sovNetworkdb(uint64(l))
		***REMOVED***
	***REMOVED***
	return n
***REMOVED***

func (m *CompoundMessage_SimpleMessage) Size() (n int) ***REMOVED***
	var l int
	_ = l
	l = len(m.Payload)
	if l > 0 ***REMOVED***
		n += 1 + l + sovNetworkdb(uint64(l))
	***REMOVED***
	return n
***REMOVED***

func sovNetworkdb(x uint64) (n int) ***REMOVED***
	for ***REMOVED***
		n++
		x >>= 7
		if x == 0 ***REMOVED***
			break
		***REMOVED***
	***REMOVED***
	return n
***REMOVED***
func sozNetworkdb(x uint64) (n int) ***REMOVED***
	return sovNetworkdb(uint64((x << 1) ^ uint64((int64(x) >> 63))))
***REMOVED***
func (this *GossipMessage) String() string ***REMOVED***
	if this == nil ***REMOVED***
		return "nil"
	***REMOVED***
	s := strings.Join([]string***REMOVED***`&GossipMessage***REMOVED***`,
		`Type:` + fmt.Sprintf("%v", this.Type) + `,`,
		`Data:` + fmt.Sprintf("%v", this.Data) + `,`,
		`***REMOVED***`,
	***REMOVED***, "")
	return s
***REMOVED***
func (this *NodeEvent) String() string ***REMOVED***
	if this == nil ***REMOVED***
		return "nil"
	***REMOVED***
	s := strings.Join([]string***REMOVED***`&NodeEvent***REMOVED***`,
		`Type:` + fmt.Sprintf("%v", this.Type) + `,`,
		`LTime:` + fmt.Sprintf("%v", this.LTime) + `,`,
		`NodeName:` + fmt.Sprintf("%v", this.NodeName) + `,`,
		`***REMOVED***`,
	***REMOVED***, "")
	return s
***REMOVED***
func (this *NetworkEvent) String() string ***REMOVED***
	if this == nil ***REMOVED***
		return "nil"
	***REMOVED***
	s := strings.Join([]string***REMOVED***`&NetworkEvent***REMOVED***`,
		`Type:` + fmt.Sprintf("%v", this.Type) + `,`,
		`LTime:` + fmt.Sprintf("%v", this.LTime) + `,`,
		`NodeName:` + fmt.Sprintf("%v", this.NodeName) + `,`,
		`NetworkID:` + fmt.Sprintf("%v", this.NetworkID) + `,`,
		`***REMOVED***`,
	***REMOVED***, "")
	return s
***REMOVED***
func (this *NetworkEntry) String() string ***REMOVED***
	if this == nil ***REMOVED***
		return "nil"
	***REMOVED***
	s := strings.Join([]string***REMOVED***`&NetworkEntry***REMOVED***`,
		`NetworkID:` + fmt.Sprintf("%v", this.NetworkID) + `,`,
		`LTime:` + fmt.Sprintf("%v", this.LTime) + `,`,
		`NodeName:` + fmt.Sprintf("%v", this.NodeName) + `,`,
		`Leaving:` + fmt.Sprintf("%v", this.Leaving) + `,`,
		`***REMOVED***`,
	***REMOVED***, "")
	return s
***REMOVED***
func (this *NetworkPushPull) String() string ***REMOVED***
	if this == nil ***REMOVED***
		return "nil"
	***REMOVED***
	s := strings.Join([]string***REMOVED***`&NetworkPushPull***REMOVED***`,
		`LTime:` + fmt.Sprintf("%v", this.LTime) + `,`,
		`Networks:` + strings.Replace(fmt.Sprintf("%v", this.Networks), "NetworkEntry", "NetworkEntry", 1) + `,`,
		`NodeName:` + fmt.Sprintf("%v", this.NodeName) + `,`,
		`***REMOVED***`,
	***REMOVED***, "")
	return s
***REMOVED***
func (this *TableEvent) String() string ***REMOVED***
	if this == nil ***REMOVED***
		return "nil"
	***REMOVED***
	s := strings.Join([]string***REMOVED***`&TableEvent***REMOVED***`,
		`Type:` + fmt.Sprintf("%v", this.Type) + `,`,
		`LTime:` + fmt.Sprintf("%v", this.LTime) + `,`,
		`NodeName:` + fmt.Sprintf("%v", this.NodeName) + `,`,
		`NetworkID:` + fmt.Sprintf("%v", this.NetworkID) + `,`,
		`TableName:` + fmt.Sprintf("%v", this.TableName) + `,`,
		`Key:` + fmt.Sprintf("%v", this.Key) + `,`,
		`Value:` + fmt.Sprintf("%v", this.Value) + `,`,
		`ResidualReapTime:` + fmt.Sprintf("%v", this.ResidualReapTime) + `,`,
		`***REMOVED***`,
	***REMOVED***, "")
	return s
***REMOVED***
func (this *BulkSyncMessage) String() string ***REMOVED***
	if this == nil ***REMOVED***
		return "nil"
	***REMOVED***
	s := strings.Join([]string***REMOVED***`&BulkSyncMessage***REMOVED***`,
		`LTime:` + fmt.Sprintf("%v", this.LTime) + `,`,
		`Unsolicited:` + fmt.Sprintf("%v", this.Unsolicited) + `,`,
		`NodeName:` + fmt.Sprintf("%v", this.NodeName) + `,`,
		`Networks:` + fmt.Sprintf("%v", this.Networks) + `,`,
		`Payload:` + fmt.Sprintf("%v", this.Payload) + `,`,
		`***REMOVED***`,
	***REMOVED***, "")
	return s
***REMOVED***
func (this *CompoundMessage) String() string ***REMOVED***
	if this == nil ***REMOVED***
		return "nil"
	***REMOVED***
	s := strings.Join([]string***REMOVED***`&CompoundMessage***REMOVED***`,
		`Messages:` + strings.Replace(fmt.Sprintf("%v", this.Messages), "CompoundMessage_SimpleMessage", "CompoundMessage_SimpleMessage", 1) + `,`,
		`***REMOVED***`,
	***REMOVED***, "")
	return s
***REMOVED***
func (this *CompoundMessage_SimpleMessage) String() string ***REMOVED***
	if this == nil ***REMOVED***
		return "nil"
	***REMOVED***
	s := strings.Join([]string***REMOVED***`&CompoundMessage_SimpleMessage***REMOVED***`,
		`Payload:` + fmt.Sprintf("%v", this.Payload) + `,`,
		`***REMOVED***`,
	***REMOVED***, "")
	return s
***REMOVED***
func valueToStringNetworkdb(v interface***REMOVED******REMOVED***) string ***REMOVED***
	rv := reflect.ValueOf(v)
	if rv.IsNil() ***REMOVED***
		return "nil"
	***REMOVED***
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
***REMOVED***
func (m *GossipMessage) Unmarshal(dAtA []byte) error ***REMOVED***
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l ***REMOVED***
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 ***REMOVED***
			if shift >= 64 ***REMOVED***
				return ErrIntOverflowNetworkdb
			***REMOVED***
			if iNdEx >= l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 ***REMOVED***
				break
			***REMOVED***
		***REMOVED***
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 ***REMOVED***
			return fmt.Errorf("proto: GossipMessage: wiretype end group for non-group")
		***REMOVED***
		if fieldNum <= 0 ***REMOVED***
			return fmt.Errorf("proto: GossipMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		***REMOVED***
		switch fieldNum ***REMOVED***
		case 1:
			if wireType != 0 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			***REMOVED***
			m.Type = 0
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= (MessageType(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
		case 2:
			if wireType != 2 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			***REMOVED***
			var byteLen int
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
			if byteLen < 0 ***REMOVED***
				return ErrInvalidLengthNetworkdb
			***REMOVED***
			postIndex := iNdEx + byteLen
			if postIndex > l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil ***REMOVED***
				m.Data = []byte***REMOVED******REMOVED***
			***REMOVED***
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipNetworkdb(dAtA[iNdEx:])
			if err != nil ***REMOVED***
				return err
			***REMOVED***
			if skippy < 0 ***REMOVED***
				return ErrInvalidLengthNetworkdb
			***REMOVED***
			if (iNdEx + skippy) > l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			iNdEx += skippy
		***REMOVED***
	***REMOVED***

	if iNdEx > l ***REMOVED***
		return io.ErrUnexpectedEOF
	***REMOVED***
	return nil
***REMOVED***
func (m *NodeEvent) Unmarshal(dAtA []byte) error ***REMOVED***
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l ***REMOVED***
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 ***REMOVED***
			if shift >= 64 ***REMOVED***
				return ErrIntOverflowNetworkdb
			***REMOVED***
			if iNdEx >= l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 ***REMOVED***
				break
			***REMOVED***
		***REMOVED***
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 ***REMOVED***
			return fmt.Errorf("proto: NodeEvent: wiretype end group for non-group")
		***REMOVED***
		if fieldNum <= 0 ***REMOVED***
			return fmt.Errorf("proto: NodeEvent: illegal tag %d (wire type %d)", fieldNum, wire)
		***REMOVED***
		switch fieldNum ***REMOVED***
		case 1:
			if wireType != 0 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			***REMOVED***
			m.Type = 0
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= (NodeEvent_Type(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
		case 2:
			if wireType != 0 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field LTime", wireType)
			***REMOVED***
			m.LTime = 0
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				m.LTime |= (github_com_hashicorp_serf_serf.LamportTime(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
		case 3:
			if wireType != 2 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field NodeName", wireType)
			***REMOVED***
			var stringLen uint64
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
			intStringLen := int(stringLen)
			if intStringLen < 0 ***REMOVED***
				return ErrInvalidLengthNetworkdb
			***REMOVED***
			postIndex := iNdEx + intStringLen
			if postIndex > l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			m.NodeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipNetworkdb(dAtA[iNdEx:])
			if err != nil ***REMOVED***
				return err
			***REMOVED***
			if skippy < 0 ***REMOVED***
				return ErrInvalidLengthNetworkdb
			***REMOVED***
			if (iNdEx + skippy) > l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			iNdEx += skippy
		***REMOVED***
	***REMOVED***

	if iNdEx > l ***REMOVED***
		return io.ErrUnexpectedEOF
	***REMOVED***
	return nil
***REMOVED***
func (m *NetworkEvent) Unmarshal(dAtA []byte) error ***REMOVED***
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l ***REMOVED***
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 ***REMOVED***
			if shift >= 64 ***REMOVED***
				return ErrIntOverflowNetworkdb
			***REMOVED***
			if iNdEx >= l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 ***REMOVED***
				break
			***REMOVED***
		***REMOVED***
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 ***REMOVED***
			return fmt.Errorf("proto: NetworkEvent: wiretype end group for non-group")
		***REMOVED***
		if fieldNum <= 0 ***REMOVED***
			return fmt.Errorf("proto: NetworkEvent: illegal tag %d (wire type %d)", fieldNum, wire)
		***REMOVED***
		switch fieldNum ***REMOVED***
		case 1:
			if wireType != 0 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			***REMOVED***
			m.Type = 0
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= (NetworkEvent_Type(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
		case 2:
			if wireType != 0 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field LTime", wireType)
			***REMOVED***
			m.LTime = 0
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				m.LTime |= (github_com_hashicorp_serf_serf.LamportTime(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
		case 3:
			if wireType != 2 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field NodeName", wireType)
			***REMOVED***
			var stringLen uint64
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
			intStringLen := int(stringLen)
			if intStringLen < 0 ***REMOVED***
				return ErrInvalidLengthNetworkdb
			***REMOVED***
			postIndex := iNdEx + intStringLen
			if postIndex > l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			m.NodeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkID", wireType)
			***REMOVED***
			var stringLen uint64
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
			intStringLen := int(stringLen)
			if intStringLen < 0 ***REMOVED***
				return ErrInvalidLengthNetworkdb
			***REMOVED***
			postIndex := iNdEx + intStringLen
			if postIndex > l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			m.NetworkID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipNetworkdb(dAtA[iNdEx:])
			if err != nil ***REMOVED***
				return err
			***REMOVED***
			if skippy < 0 ***REMOVED***
				return ErrInvalidLengthNetworkdb
			***REMOVED***
			if (iNdEx + skippy) > l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			iNdEx += skippy
		***REMOVED***
	***REMOVED***

	if iNdEx > l ***REMOVED***
		return io.ErrUnexpectedEOF
	***REMOVED***
	return nil
***REMOVED***
func (m *NetworkEntry) Unmarshal(dAtA []byte) error ***REMOVED***
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l ***REMOVED***
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 ***REMOVED***
			if shift >= 64 ***REMOVED***
				return ErrIntOverflowNetworkdb
			***REMOVED***
			if iNdEx >= l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 ***REMOVED***
				break
			***REMOVED***
		***REMOVED***
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 ***REMOVED***
			return fmt.Errorf("proto: NetworkEntry: wiretype end group for non-group")
		***REMOVED***
		if fieldNum <= 0 ***REMOVED***
			return fmt.Errorf("proto: NetworkEntry: illegal tag %d (wire type %d)", fieldNum, wire)
		***REMOVED***
		switch fieldNum ***REMOVED***
		case 1:
			if wireType != 2 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkID", wireType)
			***REMOVED***
			var stringLen uint64
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
			intStringLen := int(stringLen)
			if intStringLen < 0 ***REMOVED***
				return ErrInvalidLengthNetworkdb
			***REMOVED***
			postIndex := iNdEx + intStringLen
			if postIndex > l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			m.NetworkID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field LTime", wireType)
			***REMOVED***
			m.LTime = 0
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				m.LTime |= (github_com_hashicorp_serf_serf.LamportTime(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
		case 3:
			if wireType != 2 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field NodeName", wireType)
			***REMOVED***
			var stringLen uint64
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
			intStringLen := int(stringLen)
			if intStringLen < 0 ***REMOVED***
				return ErrInvalidLengthNetworkdb
			***REMOVED***
			postIndex := iNdEx + intStringLen
			if postIndex > l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			m.NodeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field Leaving", wireType)
			***REMOVED***
			var v int
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
			m.Leaving = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipNetworkdb(dAtA[iNdEx:])
			if err != nil ***REMOVED***
				return err
			***REMOVED***
			if skippy < 0 ***REMOVED***
				return ErrInvalidLengthNetworkdb
			***REMOVED***
			if (iNdEx + skippy) > l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			iNdEx += skippy
		***REMOVED***
	***REMOVED***

	if iNdEx > l ***REMOVED***
		return io.ErrUnexpectedEOF
	***REMOVED***
	return nil
***REMOVED***
func (m *NetworkPushPull) Unmarshal(dAtA []byte) error ***REMOVED***
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l ***REMOVED***
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 ***REMOVED***
			if shift >= 64 ***REMOVED***
				return ErrIntOverflowNetworkdb
			***REMOVED***
			if iNdEx >= l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 ***REMOVED***
				break
			***REMOVED***
		***REMOVED***
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 ***REMOVED***
			return fmt.Errorf("proto: NetworkPushPull: wiretype end group for non-group")
		***REMOVED***
		if fieldNum <= 0 ***REMOVED***
			return fmt.Errorf("proto: NetworkPushPull: illegal tag %d (wire type %d)", fieldNum, wire)
		***REMOVED***
		switch fieldNum ***REMOVED***
		case 1:
			if wireType != 0 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field LTime", wireType)
			***REMOVED***
			m.LTime = 0
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				m.LTime |= (github_com_hashicorp_serf_serf.LamportTime(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
		case 2:
			if wireType != 2 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field Networks", wireType)
			***REMOVED***
			var msglen int
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
			if msglen < 0 ***REMOVED***
				return ErrInvalidLengthNetworkdb
			***REMOVED***
			postIndex := iNdEx + msglen
			if postIndex > l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			m.Networks = append(m.Networks, &NetworkEntry***REMOVED******REMOVED***)
			if err := m.Networks[len(m.Networks)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil ***REMOVED***
				return err
			***REMOVED***
			iNdEx = postIndex
		case 3:
			if wireType != 2 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field NodeName", wireType)
			***REMOVED***
			var stringLen uint64
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
			intStringLen := int(stringLen)
			if intStringLen < 0 ***REMOVED***
				return ErrInvalidLengthNetworkdb
			***REMOVED***
			postIndex := iNdEx + intStringLen
			if postIndex > l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			m.NodeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipNetworkdb(dAtA[iNdEx:])
			if err != nil ***REMOVED***
				return err
			***REMOVED***
			if skippy < 0 ***REMOVED***
				return ErrInvalidLengthNetworkdb
			***REMOVED***
			if (iNdEx + skippy) > l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			iNdEx += skippy
		***REMOVED***
	***REMOVED***

	if iNdEx > l ***REMOVED***
		return io.ErrUnexpectedEOF
	***REMOVED***
	return nil
***REMOVED***
func (m *TableEvent) Unmarshal(dAtA []byte) error ***REMOVED***
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l ***REMOVED***
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 ***REMOVED***
			if shift >= 64 ***REMOVED***
				return ErrIntOverflowNetworkdb
			***REMOVED***
			if iNdEx >= l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 ***REMOVED***
				break
			***REMOVED***
		***REMOVED***
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 ***REMOVED***
			return fmt.Errorf("proto: TableEvent: wiretype end group for non-group")
		***REMOVED***
		if fieldNum <= 0 ***REMOVED***
			return fmt.Errorf("proto: TableEvent: illegal tag %d (wire type %d)", fieldNum, wire)
		***REMOVED***
		switch fieldNum ***REMOVED***
		case 1:
			if wireType != 0 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			***REMOVED***
			m.Type = 0
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= (TableEvent_Type(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
		case 2:
			if wireType != 0 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field LTime", wireType)
			***REMOVED***
			m.LTime = 0
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				m.LTime |= (github_com_hashicorp_serf_serf.LamportTime(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
		case 3:
			if wireType != 2 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field NodeName", wireType)
			***REMOVED***
			var stringLen uint64
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
			intStringLen := int(stringLen)
			if intStringLen < 0 ***REMOVED***
				return ErrInvalidLengthNetworkdb
			***REMOVED***
			postIndex := iNdEx + intStringLen
			if postIndex > l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			m.NodeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkID", wireType)
			***REMOVED***
			var stringLen uint64
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
			intStringLen := int(stringLen)
			if intStringLen < 0 ***REMOVED***
				return ErrInvalidLengthNetworkdb
			***REMOVED***
			postIndex := iNdEx + intStringLen
			if postIndex > l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			m.NetworkID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field TableName", wireType)
			***REMOVED***
			var stringLen uint64
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
			intStringLen := int(stringLen)
			if intStringLen < 0 ***REMOVED***
				return ErrInvalidLengthNetworkdb
			***REMOVED***
			postIndex := iNdEx + intStringLen
			if postIndex > l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			m.TableName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			***REMOVED***
			var stringLen uint64
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
			intStringLen := int(stringLen)
			if intStringLen < 0 ***REMOVED***
				return ErrInvalidLengthNetworkdb
			***REMOVED***
			postIndex := iNdEx + intStringLen
			if postIndex > l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			m.Key = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			***REMOVED***
			var byteLen int
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
			if byteLen < 0 ***REMOVED***
				return ErrInvalidLengthNetworkdb
			***REMOVED***
			postIndex := iNdEx + byteLen
			if postIndex > l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			m.Value = append(m.Value[:0], dAtA[iNdEx:postIndex]...)
			if m.Value == nil ***REMOVED***
				m.Value = []byte***REMOVED******REMOVED***
			***REMOVED***
			iNdEx = postIndex
		case 8:
			if wireType != 0 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field ResidualReapTime", wireType)
			***REMOVED***
			m.ResidualReapTime = 0
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				m.ResidualReapTime |= (int32(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
		default:
			iNdEx = preIndex
			skippy, err := skipNetworkdb(dAtA[iNdEx:])
			if err != nil ***REMOVED***
				return err
			***REMOVED***
			if skippy < 0 ***REMOVED***
				return ErrInvalidLengthNetworkdb
			***REMOVED***
			if (iNdEx + skippy) > l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			iNdEx += skippy
		***REMOVED***
	***REMOVED***

	if iNdEx > l ***REMOVED***
		return io.ErrUnexpectedEOF
	***REMOVED***
	return nil
***REMOVED***
func (m *BulkSyncMessage) Unmarshal(dAtA []byte) error ***REMOVED***
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l ***REMOVED***
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 ***REMOVED***
			if shift >= 64 ***REMOVED***
				return ErrIntOverflowNetworkdb
			***REMOVED***
			if iNdEx >= l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 ***REMOVED***
				break
			***REMOVED***
		***REMOVED***
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 ***REMOVED***
			return fmt.Errorf("proto: BulkSyncMessage: wiretype end group for non-group")
		***REMOVED***
		if fieldNum <= 0 ***REMOVED***
			return fmt.Errorf("proto: BulkSyncMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		***REMOVED***
		switch fieldNum ***REMOVED***
		case 1:
			if wireType != 0 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field LTime", wireType)
			***REMOVED***
			m.LTime = 0
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				m.LTime |= (github_com_hashicorp_serf_serf.LamportTime(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
		case 2:
			if wireType != 0 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field Unsolicited", wireType)
			***REMOVED***
			var v int
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
			m.Unsolicited = bool(v != 0)
		case 3:
			if wireType != 2 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field NodeName", wireType)
			***REMOVED***
			var stringLen uint64
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
			intStringLen := int(stringLen)
			if intStringLen < 0 ***REMOVED***
				return ErrInvalidLengthNetworkdb
			***REMOVED***
			postIndex := iNdEx + intStringLen
			if postIndex > l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			m.NodeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field Networks", wireType)
			***REMOVED***
			var stringLen uint64
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
			intStringLen := int(stringLen)
			if intStringLen < 0 ***REMOVED***
				return ErrInvalidLengthNetworkdb
			***REMOVED***
			postIndex := iNdEx + intStringLen
			if postIndex > l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			m.Networks = append(m.Networks, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 5:
			if wireType != 2 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field Payload", wireType)
			***REMOVED***
			var byteLen int
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
			if byteLen < 0 ***REMOVED***
				return ErrInvalidLengthNetworkdb
			***REMOVED***
			postIndex := iNdEx + byteLen
			if postIndex > l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			m.Payload = append(m.Payload[:0], dAtA[iNdEx:postIndex]...)
			if m.Payload == nil ***REMOVED***
				m.Payload = []byte***REMOVED******REMOVED***
			***REMOVED***
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipNetworkdb(dAtA[iNdEx:])
			if err != nil ***REMOVED***
				return err
			***REMOVED***
			if skippy < 0 ***REMOVED***
				return ErrInvalidLengthNetworkdb
			***REMOVED***
			if (iNdEx + skippy) > l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			iNdEx += skippy
		***REMOVED***
	***REMOVED***

	if iNdEx > l ***REMOVED***
		return io.ErrUnexpectedEOF
	***REMOVED***
	return nil
***REMOVED***
func (m *CompoundMessage) Unmarshal(dAtA []byte) error ***REMOVED***
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l ***REMOVED***
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 ***REMOVED***
			if shift >= 64 ***REMOVED***
				return ErrIntOverflowNetworkdb
			***REMOVED***
			if iNdEx >= l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 ***REMOVED***
				break
			***REMOVED***
		***REMOVED***
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 ***REMOVED***
			return fmt.Errorf("proto: CompoundMessage: wiretype end group for non-group")
		***REMOVED***
		if fieldNum <= 0 ***REMOVED***
			return fmt.Errorf("proto: CompoundMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		***REMOVED***
		switch fieldNum ***REMOVED***
		case 1:
			if wireType != 2 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field Messages", wireType)
			***REMOVED***
			var msglen int
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
			if msglen < 0 ***REMOVED***
				return ErrInvalidLengthNetworkdb
			***REMOVED***
			postIndex := iNdEx + msglen
			if postIndex > l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			m.Messages = append(m.Messages, &CompoundMessage_SimpleMessage***REMOVED******REMOVED***)
			if err := m.Messages[len(m.Messages)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil ***REMOVED***
				return err
			***REMOVED***
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipNetworkdb(dAtA[iNdEx:])
			if err != nil ***REMOVED***
				return err
			***REMOVED***
			if skippy < 0 ***REMOVED***
				return ErrInvalidLengthNetworkdb
			***REMOVED***
			if (iNdEx + skippy) > l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			iNdEx += skippy
		***REMOVED***
	***REMOVED***

	if iNdEx > l ***REMOVED***
		return io.ErrUnexpectedEOF
	***REMOVED***
	return nil
***REMOVED***
func (m *CompoundMessage_SimpleMessage) Unmarshal(dAtA []byte) error ***REMOVED***
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l ***REMOVED***
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 ***REMOVED***
			if shift >= 64 ***REMOVED***
				return ErrIntOverflowNetworkdb
			***REMOVED***
			if iNdEx >= l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 ***REMOVED***
				break
			***REMOVED***
		***REMOVED***
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 ***REMOVED***
			return fmt.Errorf("proto: SimpleMessage: wiretype end group for non-group")
		***REMOVED***
		if fieldNum <= 0 ***REMOVED***
			return fmt.Errorf("proto: SimpleMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		***REMOVED***
		switch fieldNum ***REMOVED***
		case 1:
			if wireType != 2 ***REMOVED***
				return fmt.Errorf("proto: wrong wireType = %d for field Payload", wireType)
			***REMOVED***
			var byteLen int
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
			if byteLen < 0 ***REMOVED***
				return ErrInvalidLengthNetworkdb
			***REMOVED***
			postIndex := iNdEx + byteLen
			if postIndex > l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			m.Payload = append(m.Payload[:0], dAtA[iNdEx:postIndex]...)
			if m.Payload == nil ***REMOVED***
				m.Payload = []byte***REMOVED******REMOVED***
			***REMOVED***
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipNetworkdb(dAtA[iNdEx:])
			if err != nil ***REMOVED***
				return err
			***REMOVED***
			if skippy < 0 ***REMOVED***
				return ErrInvalidLengthNetworkdb
			***REMOVED***
			if (iNdEx + skippy) > l ***REMOVED***
				return io.ErrUnexpectedEOF
			***REMOVED***
			iNdEx += skippy
		***REMOVED***
	***REMOVED***

	if iNdEx > l ***REMOVED***
		return io.ErrUnexpectedEOF
	***REMOVED***
	return nil
***REMOVED***
func skipNetworkdb(dAtA []byte) (n int, err error) ***REMOVED***
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l ***REMOVED***
		var wire uint64
		for shift := uint(0); ; shift += 7 ***REMOVED***
			if shift >= 64 ***REMOVED***
				return 0, ErrIntOverflowNetworkdb
			***REMOVED***
			if iNdEx >= l ***REMOVED***
				return 0, io.ErrUnexpectedEOF
			***REMOVED***
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 ***REMOVED***
				break
			***REMOVED***
		***REMOVED***
		wireType := int(wire & 0x7)
		switch wireType ***REMOVED***
		case 0:
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return 0, ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return 0, io.ErrUnexpectedEOF
				***REMOVED***
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 ***REMOVED***
				if shift >= 64 ***REMOVED***
					return 0, ErrIntOverflowNetworkdb
				***REMOVED***
				if iNdEx >= l ***REMOVED***
					return 0, io.ErrUnexpectedEOF
				***REMOVED***
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 ***REMOVED***
					break
				***REMOVED***
			***REMOVED***
			iNdEx += length
			if length < 0 ***REMOVED***
				return 0, ErrInvalidLengthNetworkdb
			***REMOVED***
			return iNdEx, nil
		case 3:
			for ***REMOVED***
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 ***REMOVED***
					if shift >= 64 ***REMOVED***
						return 0, ErrIntOverflowNetworkdb
					***REMOVED***
					if iNdEx >= l ***REMOVED***
						return 0, io.ErrUnexpectedEOF
					***REMOVED***
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 ***REMOVED***
						break
					***REMOVED***
				***REMOVED***
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 ***REMOVED***
					break
				***REMOVED***
				next, err := skipNetworkdb(dAtA[start:])
				if err != nil ***REMOVED***
					return 0, err
				***REMOVED***
				iNdEx = start + next
			***REMOVED***
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		***REMOVED***
	***REMOVED***
	panic("unreachable")
***REMOVED***

var (
	ErrInvalidLengthNetworkdb = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowNetworkdb   = fmt.Errorf("proto: integer overflow")
)

func init() ***REMOVED*** proto.RegisterFile("networkdb.proto", fileDescriptorNetworkdb) ***REMOVED***

var fileDescriptorNetworkdb = []byte***REMOVED***
	// 953 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x96, 0xcd, 0x6e, 0xe3, 0x54,
	0x14, 0xc7, 0x7b, 0xf3, 0xd5, 0xe4, 0x34, 0xa5, 0xe6, 0x4e, 0x67, 0xc6, 0xe3, 0x81, 0xc4, 0x98,
	0x99, 0x2a, 0x53, 0x41, 0x8a, 0x3a, 0x4f, 0xd0, 0x24, 0x16, 0x64, 0x26, 0xe3, 0x44, 0x6e, 0x52,
	0xc4, 0x2a, 0xba, 0xad, 0x2f, 0xa9, 0x55, 0xc7, 0xb6, 0x6c, 0x27, 0x28, 0x2b, 0x10, 0xab, 0x51,
	0x16, 0xbc, 0x41, 0x56, 0xc3, 0x9a, 0x07, 0x40, 0x2c, 0x59, 0xcc, 0x82, 0x05, 0xec, 0x10, 0x8b,
	0x88, 0xe6, 0x09, 0x78, 0x04, 0xe4, 0x6b, 0x3b, 0xb9, 0x49, 0xab, 0x91, 0x10, 0x23, 0xc1, 0x26,
	0xb9, 0x1f, 0xbf, 0x1c, 0x9f, 0xf3, 0xf7, 0xff, 0xdc, 0x1b, 0xd8, 0xb3, 0x69, 0xf0, 0x95, 0xe3,
	0x5d, 0x19, 0xe7, 0x55, 0xd7, 0x73, 0x02, 0x07, 0x17, 0x96, 0x0b, 0xd2, 0xfe, 0xc0, 0x19, 0x38,
	0x6c, 0xf5, 0x28, 0x1c, 0x45, 0x80, 0xd2, 0x86, 0xdd, 0x4f, 0x1d, 0xdf, 0x37, 0xdd, 0x17, 0xd4,
	0xf7, 0xc9, 0x80, 0xe2, 0x43, 0xc8, 0x04, 0x13, 0x97, 0x8a, 0x48, 0x46, 0x95, 0x77, 0x8e, 0xef,
	0x55, 0x57, 0x11, 0x63, 0xa2, 0x3b, 0x71, 0xa9, 0xce, 0x18, 0x8c, 0x21, 0x63, 0x90, 0x80, 0x88,
	0x29, 0x19, 0x55, 0x8a, 0x3a, 0x1b, 0x2b, 0xaf, 0x52, 0x50, 0xd0, 0x1c, 0x83, 0xaa, 0x63, 0x6a,
	0x07, 0xf8, 0xe3, 0xb5, 0x68, 0x0f, 0xb8, 0x68, 0x4b, 0xa6, 0xca, 0x05, 0x6c, 0x42, 0xce, 0xea,
	0x07, 0xe6, 0x90, 0xb2, 0x90, 0x99, 0xda, 0xf1, 0xeb, 0x79, 0x79, 0xeb, 0x8f, 0x79, 0xf9, 0x70,
	0x60, 0x06, 0x97, 0xa3, 0xf3, 0xea, 0x85, 0x33, 0x3c, 0xba, 0x24, 0xfe, 0xa5, 0x79, 0xe1, 0x78,
	0xee, 0x91, 0x4f, 0xbd, 0x2f, 0xd9, 0x47, 0xb5, 0x45, 0x86, 0xae, 0xe3, 0x05, 0x5d, 0x73, 0x48,
	0xf5, 0xac, 0x15, 0x7e, 0xe1, 0x87, 0x50, 0xb0, 0x1d, 0x83, 0xf6, 0x6d, 0x32, 0xa4, 0x62, 0x5a,
	0x46, 0x95, 0x82, 0x9e, 0x0f, 0x17, 0x34, 0x32, 0xa4, 0xca, 0xd7, 0x90, 0x09, 0x9f, 0x8a, 0x1f,
	0xc3, 0x76, 0x53, 0x3b, 0x3b, 0x69, 0x35, 0x1b, 0xc2, 0x96, 0x24, 0x4e, 0x67, 0xf2, 0xfe, 0x32,
	0xad, 0x70, 0xbf, 0x69, 0x8f, 0x89, 0x65, 0x1a, 0xb8, 0x0c, 0x99, 0x67, 0xed, 0xa6, 0x26, 0x20,
	0xe9, 0xee, 0x74, 0x26, 0xbf, 0xbb, 0xc6, 0x3c, 0x73, 0x4c, 0x1b, 0x7f, 0x00, 0xd9, 0x96, 0x7a,
	0x72, 0xa6, 0x0a, 0x29, 0xe9, 0xde, 0x74, 0x26, 0xe3, 0x35, 0xa2, 0x45, 0xc9, 0x98, 0x4a, 0xc5,
	0x97, 0xaf, 0x4a, 0x5b, 0x3f, 0x7e, 0x5f, 0x62, 0x0f, 0x56, 0xae, 0x53, 0x50, 0xd4, 0x22, 0x2d,
	0x22, 0xa1, 0x3e, 0x59, 0x13, 0xea, 0x3d, 0x5e, 0x28, 0x0e, 0xfb, 0x0f, 0xb4, 0xc2, 0x1f, 0x01,
	0xc4, 0xc9, 0xf4, 0x4d, 0x43, 0xcc, 0x84, 0xbb, 0xb5, 0xdd, 0xc5, 0xbc, 0x5c, 0x88, 0x13, 0x6b,
	0x36, 0xf4, 0xc4, 0x65, 0x4d, 0x43, 0x79, 0x89, 0x62, 0x69, 0x2b, 0xbc, 0xb4, 0x0f, 0xa7, 0x33,
	0xf9, 0x3e, 0x5f, 0x08, 0xaf, 0xae, 0xb2, 0x54, 0x37, 0x7a, 0x03, 0x1b, 0x18, 0x13, 0xf8, 0xd1,
	0x4a, 0xe0, 0x07, 0xd3, 0x99, 0x7c, 0x77, 0x13, 0xba, 0x4d, 0xe3, 0x5f, 0xd0, 0x4a, 0x63, 0x3b,
	0xf0, 0x26, 0x1b, 0x95, 0xa0, 0x37, 0x57, 0xf2, 0x36, 0xf5, 0x7d, 0x72, 0x43, 0xdf, 0x5a, 0x71,
	0x31, 0x2f, 0xe7, 0xb5, 0x58, 0x63, 0x4e, 0x6d, 0x11, 0xb6, 0x2d, 0x4a, 0xc6, 0xa6, 0x3d, 0x60,
	0x52, 0xe7, 0xf5, 0x64, 0xaa, 0xfc, 0x84, 0x60, 0x2f, 0x4e, 0xb4, 0x33, 0xf2, 0x2f, 0x3b, 0x23,
	0xcb, 0xe2, 0x72, 0x44, 0xff, 0x36, 0xc7, 0xa7, 0x90, 0x8f, 0x6b, 0xf7, 0xc5, 0x94, 0x9c, 0xae,
	0xec, 0x1c, 0xdf, 0xbf, 0xc5, 0x84, 0xa1, 0x8e, 0xfa, 0x12, 0xfc, 0x07, 0x85, 0x29, 0xdf, 0x65,
	0x00, 0xba, 0xe4, 0xdc, 0x8a, 0x0f, 0x86, 0xea, 0x9a, 0xdf, 0x25, 0xee, 0x51, 0x2b, 0xe8, 0x7f,
	0xef, 0x76, 0xfc, 0x3e, 0x40, 0x10, 0xa6, 0x1b, 0xc5, 0xca, 0xb2, 0x58, 0x05, 0xb6, 0xc2, 0x82,
	0x09, 0x90, 0xbe, 0xa2, 0x13, 0x31, 0xc7, 0xd6, 0xc3, 0x21, 0xde, 0x87, 0xec, 0x98, 0x58, 0x23,
	0x2a, 0x6e, 0xb3, 0x23, 0x33, 0x9a, 0xe0, 0x1a, 0x60, 0x8f, 0xfa, 0xa6, 0x31, 0x22, 0x56, 0xdf,
	0xa3, 0xc4, 0x8d, 0x0a, 0xcd, 0xcb, 0xa8, 0x92, 0xad, 0xed, 0x2f, 0xe6, 0x65, 0x41, 0x8f, 0x77,
	0x75, 0x4a, 0x5c, 0x56, 0x8a, 0xe0, 0x6d, 0xac, 0x28, 0x3f, 0x24, 0x8d, 0x77, 0xc0, 0x37, 0x1e,
	0x6b, 0x96, 0x95, 0xa2, 0x7c, 0xdb, 0x3d, 0x82, 0x5c, 0x5d, 0x57, 0x4f, 0xba, 0x6a, 0xd2, 0x78,
	0xeb, 0x58, 0xdd, 0xa3, 0x24, 0xa0, 0x21, 0xd5, 0xeb, 0x34, 0x42, 0x2a, 0x75, 0x1b, 0xd5, 0x73,
	0x8d, 0x98, 0x6a, 0xa8, 0x2d, 0xb5, 0xab, 0x0a, 0xe9, 0xdb, 0xa8, 0x06, 0xb5, 0x68, 0xb0, 0xd9,
	0x9e, 0xbf, 0x21, 0xd8, 0xab, 0x8d, 0xac, 0xab, 0xd3, 0x89, 0x7d, 0x91, 0x5c, 0x3e, 0x6f, 0xd1,
	0xcf, 0x32, 0xec, 0x8c, 0x6c, 0xdf, 0xb1, 0xcc, 0x0b, 0x33, 0xa0, 0x06, 0x73, 0x4d, 0x5e, 0xe7,
	0x97, 0xde, 0xec, 0x03, 0x89, 0x6b, 0x87, 0x8c, 0x9c, 0x66, 0x7b, 0x89, 0xeb, 0x45, 0xd8, 0x76,
	0xc9, 0xc4, 0x72, 0x88, 0xc1, 0x5e, 0x79, 0x51, 0x4f, 0xa6, 0xca, 0xb7, 0x08, 0xf6, 0xea, 0xce,
	0xd0, 0x75, 0x46, 0xb6, 0x91, 0xd4, 0xd4, 0x80, 0xfc, 0x30, 0x1a, 0xfa, 0x22, 0x62, 0x8d, 0x55,
	0xe1, 0xdc, 0xbe, 0x41, 0x57, 0x4f, 0xcd, 0xa1, 0x6b, 0xd1, 0x78, 0xa6, 0x2f, 0x7f, 0x29, 0x3d,
	0x81, 0xdd, 0xb5, 0xad, 0x30, 0x89, 0x4e, 0x9c, 0x04, 0x8a, 0x92, 0x88, 0xa7, 0x87, 0x3f, 0xa7,
	0x60, 0x87, 0xbb, 0xab, 0xf1, 0x87, 0xbc, 0x21, 0xd8, 0xf5, 0xc4, 0xed, 0x26, 0x6e, 0xa8, 0xc2,
	0xae, 0xa6, 0x76, 0x3f, 0x6f, 0xeb, 0xcf, 0xfb, 0xea, 0x99, 0xaa, 0x75, 0x05, 0x14, 0x1d, 0xda,
	0x1c, 0xba, 0x76, 0x5f, 0x1d, 0xc2, 0x4e, 0xf7, 0xa4, 0xd6, 0x52, 0x63, 0x3a, 0x3e, 0x96, 0x39,
	0x9a, 0xeb, 0xf5, 0x03, 0x28, 0x74, 0x7a, 0xa7, 0x9f, 0xf5, 0x3b, 0xbd, 0x56, 0x4b, 0x48, 0x4b,
	0xf7, 0xa7, 0x33, 0xf9, 0x0e, 0x47, 0x2e, 0x4f, 0xb3, 0x03, 0x28, 0xd4, 0x7a, 0xad, 0xe7, 0xfd,
	0xd3, 0x2f, 0xb4, 0xba, 0x90, 0xb9, 0xc1, 0x25, 0x66, 0xc1, 0x8f, 0x21, 0x5f, 0x6f, 0xbf, 0xe8,
	0xb4, 0x7b, 0x5a, 0x43, 0xc8, 0xde, 0xc0, 0x12, 0x45, 0x71, 0x05, 0x40, 0x6b, 0x37, 0x92, 0x0c,
	0x73, 0x91, 0x31, 0xf9, 0x7a, 0x92, 0x4b, 0x5a, 0xba, 0x13, 0x1b, 0x93, 0x97, 0xad, 0x26, 0xfe,
	0x7e, 0x5d, 0xda, 0xfa, 0xeb, 0xba, 0x84, 0xbe, 0x59, 0x94, 0xd0, 0xeb, 0x45, 0x09, 0xfd, 0xba,
	0x28, 0xa1, 0x3f, 0x17, 0x25, 0x74, 0x9e, 0x63, 0x7f, 0x9d, 0x9e, 0xfe, 0x1d, 0x00, 0x00, 0xff,
	0xff, 0x92, 0x82, 0xdb, 0x1a, 0x6e, 0x09, 0x00, 0x00,
***REMOVED***
