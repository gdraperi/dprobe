syntax = "proto3";

package docker.swarmkit.v1;

import "github.com/docker/swarmkit/api/types.proto";
import "github.com/docker/swarmkit/api/specs.proto";
import "gogoproto/gogo.proto";
import "github.com/docker/swarmkit/protobuf/plugin/plugin.proto";

// CA defines the RPC methods for requesting certificates from a CA.

service CA ***REMOVED***
	rpc GetRootCACertificate(GetRootCACertificateRequest) returns (GetRootCACertificateResponse) ***REMOVED***
		option (docker.protobuf.plugin.tls_authorization) = ***REMOVED*** insecure: true ***REMOVED***;
	***REMOVED***;
	// GetUnlockKey returns the current unlock key for the cluster for the role of the client
	// asking.
	rpc GetUnlockKey(GetUnlockKeyRequest) returns (GetUnlockKeyResponse) ***REMOVED***
		option (docker.protobuf.plugin.tls_authorization) = ***REMOVED*** roles: ["swarm-manager"] ***REMOVED***;
	***REMOVED***;
***REMOVED***

service NodeCA ***REMOVED***
	rpc IssueNodeCertificate(IssueNodeCertificateRequest) returns (IssueNodeCertificateResponse) ***REMOVED***
		option (docker.protobuf.plugin.tls_authorization) = ***REMOVED*** insecure: true ***REMOVED***;
	***REMOVED***;
	rpc NodeCertificateStatus(NodeCertificateStatusRequest) returns (NodeCertificateStatusResponse) ***REMOVED***
		option (docker.protobuf.plugin.tls_authorization) = ***REMOVED*** insecure: true ***REMOVED***;
	***REMOVED***;
***REMOVED***

message NodeCertificateStatusRequest ***REMOVED***
	string node_id = 1;
***REMOVED***

message NodeCertificateStatusResponse ***REMOVED***
	IssuanceStatus status = 1;
	Certificate certificate = 2;
***REMOVED***

message IssueNodeCertificateRequest ***REMOVED***
	// DEPRECATED: Role is now selected based on which secret is matched.
	NodeRole role = 1 [deprecated=true];

	// CSR is the certificate signing request.
	bytes csr = 2 [(gogoproto.customname) = "CSR"];

	// Token represents a user-provided string that is necessary for new
	// nodes to join the cluster
	string token = 3;

	// Availability allows a user to control the current scheduling status of a node
	NodeSpec.Availability availability = 4;
***REMOVED***

message IssueNodeCertificateResponse ***REMOVED***
	string node_id = 1;
	NodeSpec.Membership node_membership = 2;
***REMOVED***

message GetRootCACertificateRequest ***REMOVED******REMOVED***

message GetRootCACertificateResponse ***REMOVED***
	bytes certificate = 1;
***REMOVED***

message GetUnlockKeyRequest ***REMOVED******REMOVED***

message GetUnlockKeyResponse ***REMOVED***
	bytes unlock_key = 1;
	Version version = 2 [(gogoproto.nullable) = false];
***REMOVED***
